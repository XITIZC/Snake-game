import pygame, sys, time, random
pygame.init()

# Game settings
frame_size_x = 720
frame_size_y = 480

# Colors (R, G, B)
colors = {
    'black': pygame.Color(0, 0, 0),
    'white': pygame.Color(255, 255, 255),
    'red': pygame.Color(255, 0, 0),
    'green': pygame.Color(0, 255, 0),
    'blue': pygame.Color(0, 0, 255),
    'yellow': pygame.Color(255 , 255 ,0)
}

# Initialize game window
pygame.display.set_caption('SNAKE GAME')
game_window = pygame.display.set_mode((frame_size_x, frame_size_y))

# FPS controller
fps_controller = pygame.time.Clock()

# Game variables
snake_pos = [100, 50]
snake_body = [[100, 50], [90, 50], [80, 50]]#give the coordinates of the body of the snake 
food_pos = [random.randrange(1, frame_size_x // 10) * 10, random.randrange(1, frame_size_y // 10) * 10] #random postion geven to food
food_spawn = True #food is spawned 
direction = 'RIGHT'
change_to = direction
score = 0

# Difficulty levels
difficulty_levels = {
    'Easy': 20,
    'Medium':40,
    'Hard': 45
}
difficulty = difficulty_levels['Medium']

def game_over():
    my_font = pygame.font.SysFont('times new roman', 90)
    game_over_surface = my_font.render('GAME OVER', True, colors['white'])
    game_over_rect = game_over_surface.get_rect(midtop=(frame_size_x / 2, frame_size_y / 4))
    game_window.fill(colors['black'])
    game_window.blit(game_over_surface, game_over_rect)
    show_score(0, colors['yellow'], 'times', 20)
    pygame.display.flip()
    time.sleep(3)
    pygame.quit()
    sys.exit()

def show_score(choice, color, font, size):
    score_font = pygame.font.SysFont(font, size)
    score_surface = score_font.render(f'Score : {score}', True, color)
    score_rect = score_surface.get_rect(midtop=(frame_size_x / 10, 15) if choice == 1 else (frame_size_x / 2, frame_size_y / 1.25))
    game_window.blit(score_surface, score_rect)

def show_menu():
    menu_font = pygame.font.SysFont('times new roman', 50)
    game_window.fill(colors['black'])

    easy_surface = menu_font.render('1: Easy', True, colors['white'])
    medium_surface = menu_font.render('2: Medium', True, colors['white'])
    hard_surface = menu_font.render('3: Hard', True, colors['white'])
    quit_surface = menu_font.render('Q: Quit', True, colors['white'])

    easy_rect = easy_surface.get_rect(midtop=(frame_size_x / 2, frame_size_y / 4))
    medium_rect = medium_surface.get_rect(midtop=(frame_size_x / 2, frame_size_y / 2))
    hard_rect = hard_surface.get_rect(midtop=(frame_size_x / 2, frame_size_y * 3 / 4))
    quit_rect = quit_surface.get_rect(midtop=(frame_size_x / 2, frame_size_y))

    game_window.blit(easy_surface, easy_rect)
    game_window.blit(medium_surface, medium_rect)
    game_window.blit(hard_surface, hard_rect)
    game_window.blit(quit_surface, quit_rect)

    pygame.display.flip()

#game difficulty 
def select_difficulty():
    global difficulty
    selecting = True
    while selecting:
        show_menu()
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_1:
                    difficulty = difficulty_levels['Easy']
                    selecting = False
                if event.key == pygame.K_2:
                    difficulty = difficulty_levels['Medium']
                    selecting = False
                if event.key == pygame.K_3:
                    difficulty = difficulty_levels['Hard']
                    selecting = False
                if event.key == pygame.K_q:
                    pygame.quit()
                    sys.exit()

select_difficulty()

# movement of snake 
while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
        elif event.type == pygame.KEYDOWN:
            if event.key in (pygame.K_UP, ord('w')):
                change_to = 'UP'
            if event.key in (pygame.K_DOWN, ord('s')):
                change_to = 'DOWN'
            if event.key in (pygame.K_LEFT, ord('a')):
                change_to = 'LEFT'
            if event.key in (pygame.K_RIGHT, ord('d')):
                change_to = 'RIGHT'
            if event.key == pygame.K_ESCAPE:
                pygame.event.post(pygame.event.Event(pygame.QUIT))

    if change_to == 'UP' and direction != 'DOWN':
        direction = 'UP'
    if change_to == 'DOWN' and direction != 'UP':
        direction = 'DOWN'
    if change_to == 'LEFT' and direction != 'RIGHT':
        direction = 'LEFT'
    if change_to == 'RIGHT' and direction != 'LEFT':
        direction = 'RIGHT'

    if direction == 'UP':
        snake_pos[1] -= 10
    if direction == 'DOWN':
        snake_pos[1] += 10
    if direction == 'LEFT':
        snake_pos[0] -= 10
    if direction == 'RIGHT':
        snake_pos[0] += 10

#FOOD SPWANING
    snake_body.insert(0, list(snake_pos))
    if snake_pos == food_pos:
        score += 1
        food_spawn = False
    else:
        snake_body.pop()

    if not food_spawn:
        food_pos = [random.randrange(1, frame_size_x // 10) * 10, random.randrange(1, frame_size_y // 10) * 10]
    food_spawn = True

    game_window.fill(colors['black'])
    for pos in snake_body:
        pygame.draw.rect(game_window, colors['green'], pygame.Rect(pos[0], pos[1], 10, 10))
    pygame.draw.rect(game_window, colors['white'], pygame.Rect(food_pos[0], food_pos[1], 10, 10))

    if snake_pos[0] < 0 or snake_pos[0] > frame_size_x - 10 or snake_pos[1] < 0 or snake_pos[1] > frame_size_y - 10:
        game_over()

    for block in snake_body[1:]:
        if snake_pos == block:
            game_over()

    show_score(1, colors['white'], 'consolas', 20)
    pygame.display.update()
    fps_controller.tick(difficulty)
